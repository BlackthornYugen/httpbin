name: Run CI

on: [push, pull_request]

permissions:
  contents: read
  packages: write

jobs:
  unit-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12-dev", "pypy-3.8", "pypy-3.9", "pypy-3.10"]
        os: [ubuntu-22.04, macOS-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    # from https://github.com/actions/cache/blob/main/examples.md#python---pip
    - name: Get pip cache dir
      id: pip-cache
      shell: bash
      run: |
        echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
    - name: pip cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        # the action does not permit updating an existing cache, so we need
        # unique keys
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --editable .[test]
    - name: Run tests
      run: |
        python -m pytest tests

  publish-docker-image:
    runs-on: ubuntu-latest
    needs: [unit-tests]
    steps:
      - name: System Dependencies for Packaging
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          sudo pip install --upgrade pip
          sudo pip install yq
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Environment
        run: |
          echo "APP_VERSION=$(tomlq -r .project.version pyproject.toml)" >> $GITHUB_ENV
          echo "APP_DESC=$(tomlq -r .project.description pyproject.toml)" >> $GITHUB_ENV
      - name: Build Image
        run: >
          docker build
          --build-arg "APP_VERSION=${APP_VERSION}"
          --build-arg "APP_DESC=${APP_DESC}"
          -t "ghcr.io/${GITHUB_REPOSITORY}:${APP_VERSION}"
          -t "ghcr.io/${GITHUB_REPOSITORY}:latest"
          .

      # - name: Login to Docker Hub
      #   if: github.event_name == 'push'
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        if: startsWith(github.ref, 'refs/tags/release-') && github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image
        if: startsWith(github.ref, 'refs/tags/release-') && github.event_name == 'push'
        run: |
          docker push "ghcr.io/${GITHUB_REPOSITORY}:${APP_VERSION}"

  publish-python-package:
    needs: [unit-tests]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/release-') && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      - name: Build distribution
        run: |
          python -m pip install --upgrade pip build
          pyproject-build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
